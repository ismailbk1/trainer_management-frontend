{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport Swal from 'sweetalert2';\nexport let StudentListComponent = class StudentListComponent {\n  constructor(adminService, router) {\n    this.adminService = adminService;\n    this.router = router;\n    this.displayedColumns = [\"firstName\", \"lastName\", \"email\", \"phoneNumber\", \"Actions\"];\n  }\n  ngOnInit() {\n    this.getAllStudent();\n  }\n  getAllStudent() {\n    this.adminService.getAllStudent().subscribe(data => {\n      console.log(data);\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n    }, err => {\n      console.log(err);\n    });\n  }\n  handleDeleteAction(values) {\n    console.log(values.id);\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Are you sure you want to delete this Student?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        // User clicked \"Yes\", implement company deletion here\n        console.log('Deleting company...');\n        this.deleteStudent(values.id);\n      } else {\n        // User clicked \"Cancel\" or closed the dialog\n        console.log('Deletion canceled.');\n      }\n    });\n  }\n  deleteStudent(id) {\n    this.adminService.deleteStudent(id).subscribe(reponse => {\n      Swal.fire(\"Student deleted successfully\");\n      this.getAllStudent();\n    }, error => {\n      Swal.fire(\"Error deleting Please try again\");\n      console.log(error);\n      console.log(error);\n    });\n  }\n  handleUpdateStudent() {\n    this.router;\n  }\n};\n__decorate([ViewChild(MatPaginator, {\n  static: true\n})], StudentListComponent.prototype, \"paginator\", void 0);\nStudentListComponent = __decorate([Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.scss']\n})], StudentListComponent);","map":{"version":3,"names":["Component","ViewChild","MatPaginator","MatTableDataSource","Swal","StudentListComponent","constructor","adminService","router","displayedColumns","ngOnInit","getAllStudent","subscribe","data","console","log","dataSource","paginator","err","handleDeleteAction","values","id","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteStudent","reponse","error","handleUpdateStudent","__decorate","static","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\HP\\Desktop\\Application\\Gestion-Platform-Front\\src\\app\\student-list\\student-list.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AdminService } from '../Services/admin.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.scss']\n})\nexport class StudentListComponent implements OnInit {\n\n  dataSource:any;\n  displayedColumns: string[] = [\"firstName\",\"lastName\",\"email\", \"phoneNumber\",\"Actions\"];\n\nconstructor(private adminService:AdminService,\n  private router:Router\n  ){\n\n}\n\n@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator | undefined;\n  ngOnInit(): void {\nthis.getAllStudent()\n  }\n  getAllStudent() {\nthis.adminService.getAllStudent().subscribe(\n  (data:any) => {\n    console.log(data);\n    \n    this.dataSource = new MatTableDataSource(data);\n    this.dataSource.paginator = this.paginator;\n  },\n  (err:any) => {\n\n   \nconsole.log(err);\n\n  });\n\n  }\n\n  handleDeleteAction(values: any){\n    console.log(values.id);\n    \n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Are you sure you want to delete this Student?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // User clicked \"Yes\", implement company deletion here\n        console.log('Deleting company...');\n        this.deleteStudent(values.id);\n      } else {\n        // User clicked \"Cancel\" or closed the dialog\n        console.log('Deletion canceled.');\n      }\n    });\n  }\n        \n      \n      \n  deleteStudent(id: any) {\n          this.adminService.deleteStudent(id).subscribe(\n      (reponse:any)=>{\n        \n    Swal.fire(\"Student deleted successfully\")\n      this.getAllStudent();\n     \n      \n\n        \n      },\n      (error:any)=>{\n        Swal.fire(\"Error deleting Please try again\")\n        console.log(error);\n        \n\n        \n      console.log(error);\n    \n      \n      }\n      \n          );\n        }\n\n        handleUpdateStudent(){\n          this.router\n        }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAUC,SAAS,QAAQ,eAAe;AAE5D,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,OAAOC,IAAI,MAAM,aAAa;AAOvB,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAKjCC,YAAoBC,YAAyB,EACnCC,MAAa;IADH,KAAAD,YAAY,GAAZA,YAAY;IACtB,KAAAC,MAAM,GAANA,MAAM;IAHd,KAAAC,gBAAgB,GAAa,CAAC,WAAW,EAAC,UAAU,EAAC,OAAO,EAAE,aAAa,EAAC,SAAS,CAAC;EAMxF;EAGEC,QAAQA,CAAA;IACV,IAAI,CAACC,aAAa,EAAE;EAClB;EACAA,aAAaA,CAAA;IACf,IAAI,CAACJ,YAAY,CAACI,aAAa,EAAE,CAACC,SAAS,CACxCC,IAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAEjB,IAAI,CAACG,UAAU,GAAG,IAAIb,kBAAkB,CAACU,IAAI,CAAC;MAC9C,IAAI,CAACG,UAAU,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS;IAC5C,CAAC,EACAC,GAAO,IAAI;MAGdJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IAEd,CAAC,CAAC;EAEF;EAEAC,kBAAkBA,CAACC,MAAW;IAC5BN,OAAO,CAACC,GAAG,CAACK,MAAM,CAACC,EAAE,CAAC;IAEtBjB,IAAI,CAACkB,IAAI,CAAC;MACRC,KAAK,EAAE,eAAe;MACtBC,IAAI,EAAE,+CAA+C;MACrDC,IAAI,EAAE,SAAS;MACfC,gBAAgB,EAAE,IAAI;MACtBC,kBAAkB,EAAE,SAAS;MAC7BC,iBAAiB,EAAE,MAAM;MACzBC,iBAAiB,EAAE;KACpB,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;MACjB,IAAIA,MAAM,CAACC,WAAW,EAAE;QACtB;QACAlB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClC,IAAI,CAACkB,aAAa,CAACb,MAAM,CAACC,EAAE,CAAC;OAC9B,MAAM;QACL;QACAP,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;;IAErC,CAAC,CAAC;EACJ;EAIAkB,aAAaA,CAACZ,EAAO;IACb,IAAI,CAACd,YAAY,CAAC0B,aAAa,CAACZ,EAAE,CAAC,CAACT,SAAS,CAChDsB,OAAW,IAAG;MAEjB9B,IAAI,CAACkB,IAAI,CAAC,8BAA8B,CAAC;MACvC,IAAI,CAACX,aAAa,EAAE;IAKpB,CAAC,EACAwB,KAAS,IAAG;MACX/B,IAAI,CAACkB,IAAI,CAAC,iCAAiC,CAAC;MAC5CR,OAAO,CAACC,GAAG,CAACoB,KAAK,CAAC;MAIpBrB,OAAO,CAACC,GAAG,CAACoB,KAAK,CAAC;IAGlB,CAAC,CAEI;EACH;EAEAC,mBAAmBA,CAAA;IACjB,IAAI,CAAC5B,MAAM;EACb;CACP;AA1E0C6B,UAAA,EAA1CpC,SAAS,CAACC,YAAY,EAAE;EAAEoC,MAAM,EAAE;AAAI,CAAE,CAAC,C,sDAAqC;AAXlEjC,oBAAoB,GAAAgC,UAAA,EALhCrC,SAAS,CAAC;EACTuC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWpC,oBAAoB,CAqFhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}