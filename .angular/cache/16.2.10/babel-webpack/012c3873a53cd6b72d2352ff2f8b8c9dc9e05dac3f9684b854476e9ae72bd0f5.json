{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.url = environment.apiURL;\n    this.jsonHeader = {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    };\n  }\n  loginC(data) {\n    return this.http.post(`${this.url}/api/v1/auth/login`, data, this.jsonHeader);\n  }\n  login(data) {\n    return this.http.post(`${this.url}/api/v1/auth/login`, data, this.jsonHeader);\n  }\n  login(data) {\n    return this.http.post(`${this.url}/api/v1/auth/login`, data, this.jsonHeader);\n  }\n  signup(data) {\n    return this.http.post(`${this.url}/registerCompany`, data, {\n      responseType: 'text'\n    });\n  }\n  signupStudent(data) {\n    return this.http.post(`${this.url}/registerStudent`, data, {\n      responseType: 'text'\n    });\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","AuthService","constructor","http","url","apiURL","jsonHeader","headers","set","loginC","data","post","login","signup","responseType","signupStudent","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\HP\\Desktop\\Application\\Gestion-Platform-Front\\src\\app\\Services\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  url=environment.apiURL;\n  jsonHeader = {\n   headers: new HttpHeaders().set('Content-Type', 'application/json'),\n };\n  constructor(private http:HttpClient) { }\n\n  loginC(data: any) {\n    return this.http.post(`${this.url}/api/v1/auth/login`, data, this.jsonHeader);\n  }\n  login(data: any) {\n    return this.http.post(`${this.url}/api/v1/auth/login`, data, this.jsonHeader);\n  }\n  login(data: any) {\n    return this.http.post(`${this.url}/api/v1/auth/login`, data, this.jsonHeader);\n  }\n  signup(data: any) {\n    return this.http.post(`${this.url}/registerCompany`, data, { responseType: 'text' });\n  }\n  signupStudent(data: any) {\n    return this.http.post(`${this.url}/registerStudent`, data, { responseType: 'text' });\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,GAAG,GAACJ,WAAW,CAACK,MAAM;IACtB,KAAAC,UAAU,GAAG;MACZC,OAAO,EAAE,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,kBAAkB;KAClE;EACuC;EAEvCC,MAAMA,CAACC,IAAS;IACd,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,GAAG,oBAAoB,EAAEM,IAAI,EAAE,IAAI,CAACJ,UAAU,CAAC;EAC/E;EACAM,KAAKA,CAACF,IAAS;IACb,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,GAAG,oBAAoB,EAAEM,IAAI,EAAE,IAAI,CAACJ,UAAU,CAAC;EAC/E;EACAM,KAAKA,CAACF,IAAS;IACb,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,GAAG,oBAAoB,EAAEM,IAAI,EAAE,IAAI,CAACJ,UAAU,CAAC;EAC/E;EACAO,MAAMA,CAACH,IAAS;IACd,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,GAAG,kBAAkB,EAAEM,IAAI,EAAE;MAAEI,YAAY,EAAE;IAAM,CAAE,CAAC;EACtF;EACAC,aAAaA,CAACL,IAAS;IACrB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,GAAG,kBAAkB,EAAEM,IAAI,EAAE;MAAEI,YAAY,EAAE;IAAM,CAAE,CAAC;EACtF;EAAC,QAAAE,CAAA,G;qBArBUf,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXpB,WAAW;IAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}