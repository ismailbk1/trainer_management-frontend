{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nexport let RegisterStudentComponent = class RegisterStudentComponent {\n  constructor(fb, router, authService, snackbar) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.snackbar = snackbar;\n    this.signupForm = FormGroup;\n    this.showPassword = false;\n  }\n  ngOnInit() {\n    this.signupForm = this.fb.group({\n      name: [null, [Validators.required]],\n      email: [null, [Validators.required]],\n      phoneNumber: [null, [Validators.required]],\n      password: [null, [Validators.required, Validators.minLength(7)]]\n    });\n  }\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n  handleSubmit() {\n    console.log(this.signupForm.value);\n    let formData = this.signupForm.value;\n    var data = {\n      name: formData.name,\n      email: formData.email,\n      phoneNumber: formData.phoneNumber,\n      password: formData.password\n    };\n    console.log(data);\n    this.authService.signup(data).subscribe(response => {\n      console.log(response);\n      Swal.fire('Company Added successfully');\n      // this.snackbar.openSnackBar(response, 'success');\n      this.signupForm.reset();\n    }, error => {\n      console.log(error);\n      Swal.fire('Please Check your details');\n    });\n  }\n};\nRegisterStudentComponent = __decorate([Component({\n  selector: 'app-register-student',\n  templateUrl: './register-student.component.html',\n  styleUrls: ['./register-student.component.scss']\n})], RegisterStudentComponent);","map":{"version":3,"names":["Component","FormGroup","Validators","Swal","RegisterStudentComponent","constructor","fb","router","authService","snackbar","signupForm","showPassword","ngOnInit","group","name","required","email","phoneNumber","password","minLength","togglePasswordVisibility","handleSubmit","console","log","value","formData","data","signup","subscribe","response","fire","reset","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\HP\\Desktop\\Application\\Gestion-Platform-Front\\src\\app\\register-student\\register-student.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../Services/auth.service';\nimport { SnackbarService } from '../Services/snackbar.service';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-register-student',\n  templateUrl: './register-student.component.html',\n  styleUrls: ['./register-student.component.scss']\n})\nexport class RegisterStudentComponent implements OnInit {\n  signupForm: any = FormGroup;\n  public showPassword: boolean = false;\n  constructor( private fb:FormBuilder,\n    private router:Router,\n    private authService:AuthService,\n    private snackbar:SnackbarService,\n    ) {\n\n   }\n  ngOnInit(): void {\n    this.signupForm=this.fb.group({\n      name:[null,[Validators.required]],\n      email:[null,[Validators.required]],\n      phoneNumber:[null,[Validators.required]],\n      password:[null,[Validators.required,Validators.minLength(7)]]\n      \n         });\n  \n  }\n\n  public togglePasswordVisibility(): void {\n    this.showPassword = !this.showPassword;\n  }\n  handleSubmit(){\n  \n    console.log(this.signupForm.value);\n    let formData = this.signupForm.value;\n    var data={\n     name: formData.name,\n      email: formData.email,\n      phoneNumber:formData.phoneNumber,\n      password:formData.password,\n     \n\n    }\n    console.log(data);\n    this.authService.signup(data).subscribe(\n      (response)=>{\nconsole.log(response);\n\n  Swal.fire('Company Added successfully');\n\n\n// this.snackbar.openSnackBar(response, 'success');\n\nthis.signupForm.reset();\n\n      },(error)=>{\nconsole.log(error);\nSwal.fire('Please Check your details');\n\n      }\n    )\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAsBC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAInE,OAAOC,IAAI,MAAM,aAAa;AAMvB,WAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAGnCC,YAAqBC,EAAc,EACzBC,MAAa,EACbC,WAAuB,EACvBC,QAAwB;IAHb,KAAAH,EAAE,GAAFA,EAAE;IACb,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,QAAQ,GAARA,QAAQ;IALlB,KAAAC,UAAU,GAAQT,SAAS;IACpB,KAAAU,YAAY,GAAY,KAAK;EAOnC;EACDC,QAAQA,CAAA;IACN,IAAI,CAACF,UAAU,GAAC,IAAI,CAACJ,EAAE,CAACO,KAAK,CAAC;MAC5BC,IAAI,EAAC,CAAC,IAAI,EAAC,CAACZ,UAAU,CAACa,QAAQ,CAAC,CAAC;MACjCC,KAAK,EAAC,CAAC,IAAI,EAAC,CAACd,UAAU,CAACa,QAAQ,CAAC,CAAC;MAClCE,WAAW,EAAC,CAAC,IAAI,EAAC,CAACf,UAAU,CAACa,QAAQ,CAAC,CAAC;MACxCG,QAAQ,EAAC,CAAC,IAAI,EAAC,CAAChB,UAAU,CAACa,QAAQ,EAACb,UAAU,CAACiB,SAAS,CAAC,CAAC,CAAC,CAAC;KAExD,CAAC;EAET;EAEOC,wBAAwBA,CAAA;IAC7B,IAAI,CAACT,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EACAU,YAAYA,CAAA;IAEVC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,UAAU,CAACc,KAAK,CAAC;IAClC,IAAIC,QAAQ,GAAG,IAAI,CAACf,UAAU,CAACc,KAAK;IACpC,IAAIE,IAAI,GAAC;MACRZ,IAAI,EAAEW,QAAQ,CAACX,IAAI;MAClBE,KAAK,EAAES,QAAQ,CAACT,KAAK;MACrBC,WAAW,EAACQ,QAAQ,CAACR,WAAW;MAChCC,QAAQ,EAACO,QAAQ,CAACP;KAGnB;IACDI,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;IACjB,IAAI,CAAClB,WAAW,CAACmB,MAAM,CAACD,IAAI,CAAC,CAACE,SAAS,CACpCC,QAAQ,IAAG;MAClBP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;MAEnB1B,IAAI,CAAC2B,IAAI,CAAC,4BAA4B,CAAC;MAGzC;MAEA,IAAI,CAACpB,UAAU,CAACqB,KAAK,EAAE;IAEjB,CAAC,EAAEC,KAAK,IAAG;MACjBV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;MAClB7B,IAAI,CAAC2B,IAAI,CAAC,2BAA2B,CAAC;IAEhC,CAAC,CACF;EACH;CACD;AAvDY1B,wBAAwB,GAAA6B,UAAA,EALpCjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,C,EACWhC,wBAAwB,CAuDpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}