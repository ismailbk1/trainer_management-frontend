{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/button\";\nimport * as i2 from \"@angular/material/dialog\";\nexport class ConfirmationComponent {\n  constructor(dialogData) {\n    this.dialogData = dialogData;\n    this.onEmitStatusChange = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this.dialogData && this.dialogData.confirmation) {\n      this.details = this.dialogData;\n    }\n  }\n  handleChangeAction() {\n    this.onEmitStatusChange.emit();\n  }\n  static #_ = this.ɵfac = function ConfirmationComponent_Factory(t) {\n    return new (t || ConfirmationComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfirmationComponent,\n    selectors: [[\"app-confirmation\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[1, \"mat-typography\"], [\"align\", \"end\"], [\"mat-raised-button\", \"\", 1, \"yes-button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"mat-dialog-close\", \"\", 1, \"no-button\"]],\n    template: function ConfirmationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-dialog-content\", 0)(1, \"h5\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"mat-dialog-actions\", 1)(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ConfirmationComponent_Template_button_click_4_listener() {\n          return ctx.handleChangeAction();\n        });\n        i0.ɵɵtext(5, \" Yes \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵtext(7, \" No \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.details.message, \" \");\n      }\n    },\n    dependencies: [i1.MatButton, i2.MatDialogClose, i2.MatDialogContent, i2.MatDialogActions],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","MAT_DIALOG_DATA","ConfirmationComponent","constructor","dialogData","onEmitStatusChange","ngOnInit","confirmation","details","handleChangeAction","emit","_","i0","ɵɵdirectiveInject","_2","selectors","decls","vars","consts","template","ConfirmationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ConfirmationComponent_Template_button_click_4_listener","ɵɵadvance","ɵɵtextInterpolate1","message"],"sources":["C:\\Users\\HP\\Desktop\\Application\\Gestion-Platform-Front\\src\\app\\dialog\\confirmation\\confirmation.component.ts","C:\\Users\\HP\\Desktop\\Application\\Gestion-Platform-Front\\src\\app\\dialog\\confirmation\\confirmation.component.html"],"sourcesContent":["import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.scss']\n})\nexport class ConfirmationComponent implements OnInit {\n  onEmitStatusChange=new EventEmitter();\n  details:any;\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData:any){\n  \n  }\n    ngOnInit(): void {\n  if(this.dialogData && this.dialogData.confirmation){\n    this.details=this.dialogData;\n  }\n    }\n    handleChangeAction(){\n      this.onEmitStatusChange.emit();\n    }\n  }\n  ","<mat-dialog-content class=\"mat-typography\">\n    <h5>{{ details.message }} </h5>\n  </mat-dialog-content>\n  \n  <mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"handleChangeAction()\" class=\"yes-button\" >\n      Yes\n    </button>\n  \n    <button mat-raised-button mat-dialog-close class=\"no-button\" >\n      No\n    </button>\n  </mat-dialog-actions>"],"mappings":"AAAA,SAAoBA,YAAY,QAAwB,eAAe;AACvE,SAASC,eAAe,QAAQ,0BAA0B;;;;AAO1D,OAAM,MAAOC,qBAAqB;EAGhCC,YAA4CC,UAAc;IAAd,KAAAA,UAAU,GAAVA,UAAU;IAFtD,KAAAC,kBAAkB,GAAC,IAAIL,YAAY,EAAE;EAIrC;EACEM,QAAQA,CAAA;IACV,IAAG,IAAI,CAACF,UAAU,IAAI,IAAI,CAACA,UAAU,CAACG,YAAY,EAAC;MACjD,IAAI,CAACC,OAAO,GAAC,IAAI,CAACJ,UAAU;;EAE5B;EACAK,kBAAkBA,CAAA;IAChB,IAAI,CAACJ,kBAAkB,CAACK,IAAI,EAAE;EAChC;EAAC,QAAAC,CAAA,G;qBAbQT,qBAAqB,EAAAU,EAAA,CAAAC,iBAAA,CAGZZ,eAAe;EAAA;EAAA,QAAAa,EAAA,G;UAHxBZ,qBAAqB;IAAAa,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRlCT,EAAA,CAAAW,cAAA,4BAA2C;QACnCX,EAAA,CAAAY,MAAA,GAAsB;QAAAZ,EAAA,CAAAa,YAAA,EAAK;QAGjCb,EAAA,CAAAW,cAAA,4BAAgC;QACJX,EAAA,CAAAc,UAAA,mBAAAC,uDAAA;UAAA,OAASL,GAAA,CAAAb,kBAAA,EAAoB;QAAA,EAAC;QACtDG,EAAA,CAAAY,MAAA,YACF;QAAAZ,EAAA,CAAAa,YAAA,EAAS;QAETb,EAAA,CAAAW,cAAA,gBAA8D;QAC5DX,EAAA,CAAAY,MAAA,WACF;QAAAZ,EAAA,CAAAa,YAAA,EAAS;;;QAVLb,EAAA,CAAAgB,SAAA,GAAsB;QAAtBhB,EAAA,CAAAiB,kBAAA,KAAAP,GAAA,CAAAd,OAAA,CAAAsB,OAAA,MAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}