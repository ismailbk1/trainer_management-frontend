{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialogConfig } from '@angular/material/dialog';\nexport let CompanyListComponent = class CompanyListComponent {\n  constructor(adminService, dialog) {\n    this.adminService = adminService;\n    this.dialog = dialog;\n    this.displayedColumns = [\"name\", \"email\", \"phoneNumber\", \"Actions\"];\n  }\n  ngOnInit() {\n    this.getAllCompany();\n  }\n  getAllCompany() {\n    this.adminService.getAllCompany().subscribe(data => {\n      console.log(data);\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n    }, err => {\n      console.log(err);\n    });\n  }\n  handleDeleteAction(values) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      message: \"Are you sure you want to delete this Course ?\",\n      confirmation: true\n    };\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe(() => {\n      this.deleteCourse(values.id);\n      dialogRef.close();\n    });\n  }\n};\n__decorate([ViewChild(MatPaginator, {\n  static: true\n})], CompanyListComponent.prototype, \"paginator\", void 0);\nCompanyListComponent = __decorate([Component({\n  selector: 'app-company-list',\n  templateUrl: './company-list.component.html',\n  styleUrls: ['./company-list.component.scss']\n})], CompanyListComponent);","map":{"version":3,"names":["Component","ViewChild","MatPaginator","MatTableDataSource","MatDialogConfig","CompanyListComponent","constructor","adminService","dialog","displayedColumns","ngOnInit","getAllCompany","subscribe","data","console","log","dataSource","paginator","err","handleDeleteAction","values","dialogConfig","message","confirmation","dialogRef","open","ConfirmationComponent","sub","componentInstance","onEmitStatusChange","deleteCourse","id","close","__decorate","static","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\HP\\Desktop\\Application\\Gestion-Platform-Front\\src\\app\\company-list\\company-list.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AdminService } from '../Services/admin.service';\nimport { MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-company-list',\n  templateUrl: './company-list.component.html',\n  styleUrls: ['./company-list.component.scss']\n})\nexport class CompanyListComponent implements OnInit {\n\n  dataSource:any;\n  displayedColumns: string[] = [\"name\",\"email\", \"phoneNumber\",\"Actions\"];\n\nconstructor(private adminService:AdminService,\n  private dialog: MatDialog,\n  \n  ){\n\n}\n\n@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator | undefined;\n  ngOnInit(): void {\nthis.getAllCompany()\n  }\n  getAllCompany() {\nthis.adminService.getAllCompany().subscribe(\n  (data:any) => {\n    console.log(data);\n    \n    this.dataSource = new MatTableDataSource(data);\n    this.dataSource.paginator = this.paginator;\n  },\n  (err:any) => {\n\n   \nconsole.log(err);\n\n  });\n\n  }\n  handleDeleteAction(values: any) {\n    const dialogConfig=new MatDialogConfig();\n    dialogConfig.data={\n      message:\"Are you sure you want to delete this Course ?\",\n      confirmation:true,\n    }\n    const dialogRef=this.dialog.open(ConfirmationComponent,dialogConfig);\n    const sub=dialogRef.componentInstance.onEmitStatusChange.subscribe(()=>{\n     \n      this.deleteCourse(values.id);\n      dialogRef.close();\n      \n    \n    \n    \n    });\n    \n        \n        }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAUC,SAAS,QAAQ,eAAe;AAC5D,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,kBAAkB,QAAQ,yBAAyB;AAE5D,SAASC,eAAe,QAAQ,0BAA0B;AAOnD,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAKjCC,YAAoBC,YAAyB,EACnCC,MAAiB;IADP,KAAAD,YAAY,GAAZA,YAAY;IACtB,KAAAC,MAAM,GAANA,MAAM;IAHd,KAAAC,gBAAgB,GAAa,CAAC,MAAM,EAAC,OAAO,EAAE,aAAa,EAAC,SAAS,CAAC;EAOxE;EAGEC,QAAQA,CAAA;IACV,IAAI,CAACC,aAAa,EAAE;EAClB;EACAA,aAAaA,CAAA;IACf,IAAI,CAACJ,YAAY,CAACI,aAAa,EAAE,CAACC,SAAS,CACxCC,IAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAEjB,IAAI,CAACG,UAAU,GAAG,IAAIb,kBAAkB,CAACU,IAAI,CAAC;MAC9C,IAAI,CAACG,UAAU,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS;IAC5C,CAAC,EACAC,GAAO,IAAI;MAGdJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IAEd,CAAC,CAAC;EAEF;EACAC,kBAAkBA,CAACC,MAAW;IAC5B,MAAMC,YAAY,GAAC,IAAIjB,eAAe,EAAE;IACxCiB,YAAY,CAACR,IAAI,GAAC;MAChBS,OAAO,EAAC,+CAA+C;MACvDC,YAAY,EAAC;KACd;IACD,MAAMC,SAAS,GAAC,IAAI,CAAChB,MAAM,CAACiB,IAAI,CAACC,qBAAqB,EAACL,YAAY,CAAC;IACpE,MAAMM,GAAG,GAACH,SAAS,CAACI,iBAAiB,CAACC,kBAAkB,CAACjB,SAAS,CAAC,MAAI;MAErE,IAAI,CAACkB,YAAY,CAACV,MAAM,CAACW,EAAE,CAAC;MAC5BP,SAAS,CAACQ,KAAK,EAAE;IAKnB,CAAC,CAAC;EAGE;CACP;AAvC0CC,UAAA,EAA1ChC,SAAS,CAACC,YAAY,EAAE;EAAEgC,MAAM,EAAE;AAAI,CAAE,CAAC,C,sDAAqC;AAZlE7B,oBAAoB,GAAA4B,UAAA,EALhCjC,SAAS,CAAC;EACTmC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWhC,oBAAoB,CAmDhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}